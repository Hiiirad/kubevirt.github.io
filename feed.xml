<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://kubevirt.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://kubevirt.io//" rel="alternate" type="text/html" /><updated>2021-06-10T17:30:11+00:00</updated><id>https://kubevirt.io//feed.xml</id><title type="html">KubeVirt.io</title><subtitle>Virtual Machine Management on Kubernetes</subtitle><entry><title type="html">KubeVirt v0.42.0</title><link href="https://kubevirt.io//2021/changelog-v0.42.0.html" rel="alternate" type="text/html" title="KubeVirt v0.42.0" /><published>2021-06-08T00:00:00+00:00</published><updated>2021-06-08T00:00:00+00:00</updated><id>https://kubevirt.io//2021/changelog-v0.42.0</id><content type="html" xml:base="https://kubevirt.io//2021/changelog-v0.42.0.html">&lt;h2 id=&quot;v0420&quot;&gt;v0.42.0&lt;/h2&gt;

&lt;p&gt;Released on: Tue Jun 8 12:09:49 2021 +0000&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[PR #5738][rmohr] Stop releasing jinja2 templates of our operator. Kustomize is the preferred way for customizations.&lt;/li&gt;
  &lt;li&gt;[PR #5691][ashleyschuett] Allow multiple shutdown events to ensure the event is received by ACPI&lt;/li&gt;
  &lt;li&gt;[PR #5558][ormergi] Drop virt-launcher SYS_RESOURCE capability&lt;/li&gt;
  &lt;li&gt;[PR #5694][davidvossel] Fixes null pointer dereference in migration controller&lt;/li&gt;
  &lt;li&gt;[PR #5416][iholder-redhat] [feature] support booting VMs from a custom kernel/initrd images with custom kernel arguments&lt;/li&gt;
  &lt;li&gt;[PR #5495][iholder-redhat] Go version updated to version 1.16.1.&lt;/li&gt;
  &lt;li&gt;[PR #5502][rmohr] Add downwardMetrics volume to expose a limited set of hots metrics to guests&lt;/li&gt;
  &lt;li&gt;[PR #5601][maya-r] Update libvirt-go to 7.3.0&lt;/li&gt;
  &lt;li&gt;[PR #5661][davidvossel] Validation/Mutation webhooks now explicitly define a 10 second timeout period&lt;/li&gt;
  &lt;li&gt;[PR #5652][rmohr] Automatically discover kube-prometheus installations and configure kubevirt monitoring&lt;/li&gt;
  &lt;li&gt;[PR #5631][davidvossel] Expand backport policy to include logging and debug fixes&lt;/li&gt;
  &lt;li&gt;[PR #5528][zcahana] Introduced a ‚Äústatus.printableStatus‚Äù field in the VirtualMachine CRD. This field is now displayed in the tabular output of ‚Äúkubectl get vm‚Äù.&lt;/li&gt;
  &lt;li&gt;[PR #5200][rhrazdil] Add support for Istio proxy traffic routing with masquerade interface. nftables is required for this feature.&lt;/li&gt;
  &lt;li&gt;[PR #5560][oshoval] virt-launcher now populates domain‚Äôs guestOS info and interfaces status according guest agent also when doing periodic resyncs.&lt;/li&gt;
  &lt;li&gt;[PR #5514][rhrazdil] Fix live-migration failing when VM with masquarade iface has explicitly specified any of these ports: 22222, 49152, 49153&lt;/li&gt;
  &lt;li&gt;[PR #5583][dhiller] Reenable coverage&lt;/li&gt;
  &lt;li&gt;[PR #5129][davidvossel] Gracefully shutdown virt-api connections and ensure zero exit code under normal shutdown conditions&lt;/li&gt;
  &lt;li&gt;[PR #5582][dhiller] Fix flaky unit tests&lt;/li&gt;
  &lt;li&gt;[PR #5600][davidvossel] Improved logging around VM/VMI shutdown and restart&lt;/li&gt;
  &lt;li&gt;[PR #5564][omeryahud] virtctl rename support is dropped&lt;/li&gt;
  &lt;li&gt;[PR #5585][iholder-redhat] [bugfix] - reject VM defined with volume with no matching disk&lt;/li&gt;
  &lt;li&gt;[PR #5595][zcahana] Fixes adoption of orphan DataVolumes&lt;/li&gt;
  &lt;li&gt;[PR #5566][davidvossel] Release branches are now cut on the first &lt;em&gt;business day&lt;/em&gt; of the month rather than the first day.&lt;/li&gt;
  &lt;li&gt;[PR #5108][Omar007] Fixes handling of /proc/&lt;pid&gt;/mountpoint by working on the device information instead of mount information&lt;/pid&gt;&lt;/li&gt;
  &lt;li&gt;[PR #5250][mlsorensen] Controller health checks will no longer actively test connectivity to the Kubernetes API. They will rely in health of their watches to determine if they have API connectivity.&lt;/li&gt;
  &lt;li&gt;[PR #5563][ashleyschuett] Set KubeVirt resources flags in the KubeVirt CR&lt;/li&gt;
  &lt;li&gt;[PR #5328][andreabolognani] This version of KubeVirt includes upgraded virtualization technology based on libvirt 7.0.0 and QEMU 5.2.0.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>kubeü§ñ</name></author><category term="releases" /><category term="release notes" /><category term="changelog" /><summary type="html">v0.42.0</summary></entry><entry><title type="html">KubeVirt v0.41.0</title><link href="https://kubevirt.io//2021/changelog-v0.41.0.html" rel="alternate" type="text/html" title="KubeVirt v0.41.0" /><published>2021-05-12T00:00:00+00:00</published><updated>2021-05-12T00:00:00+00:00</updated><id>https://kubevirt.io//2021/changelog-v0.41.0</id><content type="html" xml:base="https://kubevirt.io//2021/changelog-v0.41.0.html">&lt;h2 id=&quot;v0410&quot;&gt;v0.41.0&lt;/h2&gt;

&lt;p&gt;Released on: Wed May 12 14:30:49 2021 +0000&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[PR #5586][kubevirt-bot] This version of KubeVirt includes upgraded virtualization technology based on libvirt 7.0.0 and QEMU 5.2.0.&lt;/li&gt;
  &lt;li&gt;[PR #5344][ashleyschuett] Reconcile PrometheusRules and ServiceMonitor resources&lt;/li&gt;
  &lt;li&gt;[PR #5542][andreyod] Add startStrategy field to VMI spec to allow Virtual Machine start in paused state.&lt;/li&gt;
  &lt;li&gt;[PR #5459][ashleyschuett] Reconcile service resource&lt;/li&gt;
  &lt;li&gt;[PR #5520][ashleyschuett] Reconcile required labels and annotations on ConfigMap resources&lt;/li&gt;
  &lt;li&gt;[PR #5533][rmohr] Fix &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker save&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker push&lt;/code&gt; issues with released kubevirt images&lt;/li&gt;
  &lt;li&gt;[PR #5428][oshoval] virt-launcher now populates domain‚Äôs guestOS info and interfaces status according guest agent also when doing periodic resyncs.&lt;/li&gt;
  &lt;li&gt;[PR #5410][ashleyschuett] Reconcile ServiceAccount resources&lt;/li&gt;
  &lt;li&gt;[PR #5109][Omar007] Add support for specifying a logical and physical block size for disk devices&lt;/li&gt;
  &lt;li&gt;[PR #5471][ashleyschuett] Reconcile APIService resources&lt;/li&gt;
  &lt;li&gt;[PR #5513][ashleyschuett] Reconcile Secret resources&lt;/li&gt;
  &lt;li&gt;[PR #5496][davidvossel] Improvements to migration proxy logging&lt;/li&gt;
  &lt;li&gt;[PR #5376][ashleyschuett] Reconcile CustomResourceDefinition resources&lt;/li&gt;
  &lt;li&gt;[PR #5435][AlonaKaplan] Support dual stack service on ‚Äúvirtctl expose‚Äù-&lt;/li&gt;
  &lt;li&gt;[PR #5425][davidvossel] Fixes VM restart during eviction when EvictionStrategy=LiveMigrate&lt;/li&gt;
  &lt;li&gt;[PR #5423][ashleyschuett] Add resource requests to virt-controller, virt-api, virt-operator and virt-handler&lt;/li&gt;
  &lt;li&gt;[PR #5343][erkanerol] Some cleanups and small additions to the storage metrics&lt;/li&gt;
  &lt;li&gt;[PR #4682][stu-gott] Updated Guest Agent Version compatibility check. The new approach is much more accurate.&lt;/li&gt;
  &lt;li&gt;[PR #5485][rmohr] Fix fallback to iptables if nftables is not used on the host on arm64&lt;/li&gt;
  &lt;li&gt;[PR #5426][rmohr] Fix fallback to iptables if nftables is not used on the host&lt;/li&gt;
  &lt;li&gt;[PR #5403][tiraboschi] Added a kubevirt_ prefix to several recording rules and metrics&lt;/li&gt;
  &lt;li&gt;[PR #5241][stu-gott] Introduced Duration and RenewBefore parameters for cert rotation. Previous values are now deprecated.&lt;/li&gt;
  &lt;li&gt;[PR #5463][acardace] Fixes upgrades from KubeVirt v0.36&lt;/li&gt;
  &lt;li&gt;[PR #5456][zhlhahaha] Enable arm64 cross-compilation&lt;/li&gt;
  &lt;li&gt;[PR #3310][davidvossel] Doc outlines our Kubernetes version compatibility commitment&lt;/li&gt;
  &lt;li&gt;[PR #3383][EdDev] Add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vmIPv6NetworkCIDR&lt;/code&gt; under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NetworkSource.pod&lt;/code&gt; to support custom IPv6 CIDR for the vm network when using masquerade binding.&lt;/li&gt;
  &lt;li&gt;[PR #3415][zhlhahaha] Make kubevirt code fit for arm64 support. No testing is at this stage performed against arm64 at this point.&lt;/li&gt;
  &lt;li&gt;[PR #5147][xpivarc] Remove CAP_NET_ADMIN from the virt-launcher pod(second take).&lt;/li&gt;
  &lt;li&gt;[PR #5351][awels] Support hotplug with virtctl using addvolume and removevolume commands&lt;/li&gt;
  &lt;li&gt;[PR #5050][ashleyschuett] Fire Prometheus Alert when a vmi is orphaned for more than an hour&lt;/li&gt;
&lt;/ul&gt;</content><author><name>kubeü§ñ</name></author><category term="releases" /><category term="release notes" /><category term="changelog" /><summary type="html">v0.41.0</summary></entry><entry><title type="html">Using Intel vGPUs with Kubevirt</title><link href="https://kubevirt.io//2021/intel-vgpu-kubevirt.html" rel="alternate" type="text/html" title="Using Intel vGPUs with Kubevirt" /><published>2021-04-30T00:00:00+00:00</published><updated>2021-04-30T00:00:00+00:00</updated><id>https://kubevirt.io//2021/intel-vgpu-kubevirt</id><content type="html" xml:base="https://kubevirt.io//2021/intel-vgpu-kubevirt.html">&lt;!-- TOC depthFrom:2 insertAnchor:false orderedList:false updateOnSave:true withLinks:true --&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#fedora-workstation-prep&quot;&gt;Fedora Workstation Prep&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#preparing-the-intel-vgpu-driver&quot;&gt;Preparing the Intel vGPU driver&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-kubernetes-with-minikube&quot;&gt;Install Kubernetes with minikube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-kubevirt&quot;&gt;Install kubevirt&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#validate-vgpu-detection&quot;&gt;Validate vGPU detection&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#install-containerize-data-importer&quot;&gt;Install Containerize Data Importer&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#install-windows&quot;&gt;Install Windows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#accessing-the-windows-vm&quot;&gt;Accessing the Windows VM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#using-the-gpu&quot;&gt;Using the GPU&lt;/a&gt;
&lt;!-- /TOC --&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Graphical User Interfaces (GUIs) have come along way over the past few years and most modern desktop environments expect some form of GPU acceleration in order to give you a seamless user experience. If you have tried running things like Windows 10 within Kubevirt you may have noticed that the desktop experience felt a little slow. This is due to Windows 10 reliance on GPU acceleration. In addition many applications are also now taking advantage of GPU acceleration and it can even be used in web based applications such as ‚ÄúFishGL‚Äù:
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;my-gallery&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageGallery&quot;&gt;
  &lt;figure itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;
    &lt;a href=&quot;/assets/2021-04-30-intel-vgpu-kubevirt/fishgl-nogpu.png&quot; itemprop=&quot;contentUrl&quot; data-size=&quot;800x530&quot;&gt;
      &lt;img src=&quot;/assets/2021-04-30-intel-vgpu-kubevirt/fishgl-nogpu.png&quot; itemprop=&quot;thumbnail&quot; width=&quot;100%&quot; alt=&quot;FishGL&quot; /&gt;
    &lt;/a&gt;
    &lt;figcaption itemprop=&quot;caption description&quot;&gt;&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Without GPU hardware acceleration the user experience of a Virtual machine can be greatly impacted.&lt;/p&gt;

&lt;p&gt;Starting with 5th generation Intel Core processors that have embedded Intel graphics processing units it is possible to share the graphics processor between multiple virtual machines. In Linux, this sharing of a GPU is typically enabled through the use of mediated GPU devices, also known as vGPUs. Kubevirt has supported the use of GPUs including GPU passthrough and vGPU since v0.22.0 back in 2019. This support was centered around one specific vendor, and only worked with expensive enterprise class cards and required additional licensing. Starting with &lt;a href=&quot;https://github.com/kubevirt/kubevirt/releases/tag/v0.40.0&quot;&gt;Kubevirt 0.40&lt;/a&gt; support for detecting and allocating the Intel based vGPUs has been added to Kubevirt. Support for the creation of these virtualized Intel GPUs is available in the Linux Kernel since the 4.19 release. What does this meaning for you? You no longer need additional drivers or licenses to test out GPU accelerated virtual machines.&lt;/p&gt;

&lt;p&gt;The total number of Intel vGPUs you can create is dependent on your specific hardware as well as support for changing the Graphics aperture size and shared graphics memory within your BIOS. For more details on this see &lt;a href=&quot;https://github.com/intel/gvt-linux/wiki/GVTg_Setup_Guide#53-create-vgpu-kvmgt-only&quot;&gt;Create vGPU (KVMGT only)&lt;/a&gt; in the Intel GVTg wiki. Minimally configured devices can typically make at least two vGPU devices.&lt;/p&gt;

&lt;p&gt;You can reproduce this work on any Kubernetes cluster running kubevirt v0.40.0 or later, but the steps you need to take to load the kernel modules and enable the virtual devices will vary based on the underlying OS your Kubernetes cluster is running on. In order to demonstrate how you can enable this feature, we will use an all-in-one Kubernetes cluster built using Fedora 32 and minikube.&lt;/p&gt;

&lt;div class=&quot;premonition note&quot;&gt;&lt;div class=&quot;fa fa-check-square&quot;&gt;&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p class=&quot;header&quot;&gt;Note&lt;/p&gt;&lt;p&gt;This blog post is a more advanced topic and assumes some Linux and Kubernetes understanding.&lt;/p&gt;


&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Before we begin you will need a few things to make use of the Intel GPU:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A workstation or server with a 5th Generation or higher Intel Core Processor, or E3_v4 or higher Xeon Processor and enough memory to virtualize one or more VMs&lt;/li&gt;
  &lt;li&gt;A preinstalled Fedora 32 Workstation with at least 50Gb of free space in the ‚Äú/‚Äù filesystem&lt;/li&gt;
  &lt;li&gt;The following software:
    &lt;ul&gt;
      &lt;li&gt;minikube - See &lt;a href=&quot;https://minikube.sigs.k8s.io/docs/start/&quot;&gt;minikube start&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;virtctl - See &lt;a href=&quot;https://github.com/kubevirt/kubevirt/releases&quot;&gt;kubevirt releases&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;kubectl - See &lt;a href=&quot;https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/&quot;&gt;Install and Set Up kubectl on Linux&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A Windows 10 Install ISO Image - See &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Download Windows 10 Disk Image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;fedora-workstation-prep&quot;&gt;Fedora Workstation Prep&lt;/h3&gt;

&lt;p&gt;In order to use minikube on Fedora 32 we will be installing multiple applications that will be used throughout this demo. In addition we will be configuring the workstation to use cgroups v1 and we will be updating the firewall to allow proper communication to our Kubernetes cluster as well as any hosted applications. Finally we will be disabling SELinux per the minikube bare-metal install instructions:&lt;/p&gt;

&lt;div class=&quot;premonition note&quot;&gt;&lt;div class=&quot;fa fa-check-square&quot;&gt;&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p class=&quot;header&quot;&gt;Note&lt;/p&gt;&lt;p&gt;This post assumes that we are starting with a fresh install of Fedora 32. If you are using an existing configured Fedora 32 Workstation, you may have some software conflicts.&lt;/p&gt;


&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo dnf update -y
sudo dnf install -y pciutils podman podman-docker conntrack tigervnc rdesktop
sudo grubby --update-kernel=ALL --args=&quot;systemd.unified_cgroup_hierarchy=0&quot;
# Setup firewall rules to allow inbound and outbound connections from your minikube cluster
sudo firewall-cmd --add-port=30000-65535/tcp --permanent
sudo firewall-cmd --add-port=30000-65535/udp --permanent
sudo firewall-cmd --add-port=10250-10252/tcp --permanent
sudo firewall-cmd --add-port=10248/tcp --permanent
sudo firewall-cmd --add-port=2379-2380/tcp --permanent
sudo firewall-cmd --add-port=6443/tcp --permanent
sudo firewall-cmd --add-port=8443/tcp --permanent
sudo firewall-cmd --add-port=9153/tcp --permanent
sudo firewall-cmd --add-service=dns --permanent
sudo firewall-cmd --add-interface=cni-podman0 --permanent
sudo firewall-cmd --add-masquerade --permanent
sudo vi /etc/selinux/config
# change the &quot;SELINUX=enforcing&quot; to &quot;SELINUX=permissive&quot;
sudo setenforce 0
sudo systemctl enable sshd --now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will now install the CRIO runtime:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo dnf module enable -y cri-o:1.18
sudo dnf install -y cri-o cri-tools
sudo systemctl enable --now crio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;preparing-the-intel-vgpu-driver&quot;&gt;Preparing the Intel vGPU driver&lt;/h3&gt;

&lt;p&gt;In order to make use of the Intel vGPU driver, we need to make a few changes to our all-in-one host. The commands below assume you are using a Fedora based host. If you are using a different base OS, be sure to update your commands for that specific distribution.&lt;/p&gt;

&lt;p&gt;The following commands will do the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;load the kvmgt module to enable support within kvm&lt;/li&gt;
  &lt;li&gt;enable gvt in the i915 module&lt;/li&gt;
  &lt;li&gt;update the Linux kernel to enable Intel IOMMU&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;echo kvmgt &amp;gt; /etc/modules-load.d/gpu-kvmgt.conf&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;grubby &lt;span class=&quot;nt&quot;&gt;--update-kernel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ALL &lt;span class=&quot;nt&quot;&gt;--args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;intel_iommu=on i915.enable_gvt=1&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;shutdown &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After the reboot check to ensure that the proper kernel modules have been loaded:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;lsmod | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;kvmgt
kvmgt                  32768  0
mdev                   20480  2 kvmgt,vfio_mdev
vfio                   32768  3 kvmgt,vfio_mdev,vfio_iommu_type1
kvm                   798720  2 kvmgt,kvm_intel
i915                 2494464  4 kvmgt
drm                   557056  4 drm_kms_helper,kvmgt,i915
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will now create our vGPU devices. These virtual devices are created by echoing a GUID into a sys device created by the Intel driver. This needs to be done every time the system boots. The easiest way to do this is using a systemd service that runs on every boot. Before we create this systemd service, we need to validate the PCI ID of your Intel Graphics card. To do this we will use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lspci&lt;/code&gt; command&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;lspci
00:00.0 Host bridge: Intel Corporation Device 9b53 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rev 03&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
00:02.0 VGA compatible controller: Intel Corporation Device 9bc8 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rev 03&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
00:08.0 System peripheral: Intel Corporation Xeon E3-1200 v5/v6 / E3-1500 v5 / 6th/7th/8th Gen Core Processor Gaussian Mixture Model
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Take note that in the above output the Intel GPU is on ‚Äú00:02.0‚Äù. Now create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/gvtg-enable.service&lt;/code&gt; but be sure to update the PCI ID as appropriate for your machine:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ~/gvtg-enable.service &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
[Unit]
Description=Create Intel GVT-g vGPU

[Service]
Type=oneshot
ExecStart=/bin/sh -c &quot;echo '56a4c4e2-c81f-4cba-82bf-af46c30ea32d' &amp;gt; /sys/devices/pci0000:00/0000:00:02.0/mdev_supported_types/i915-GVTg_V5_8/create&quot;
ExecStart=/bin/sh -c &quot;echo '973069b7-2025-406b-b3c9-301016af3150' &amp;gt; /sys/devices/pci0000:00/0000:00:02.0/mdev_supported_types/i915-GVTg_V5_8/create&quot;
ExecStop=/bin/sh -c &quot;echo '1' &amp;gt; /sys/devices/pci0000:00/0000:00:02.0/56a4c4e2-c81f-4cba-82bf-af46c30ea32d/remove&quot;
ExecStop=/bin/sh -c &quot;echo '1' &amp;gt; /sys/devices/pci0000:00/0000:00:02.0/973069b7-2025-406b-b3c9-301016af3150/remove&quot;
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOF
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mv&lt;/span&gt; ~/gvtg-enable.service /etc/systemd/system/gvtg-enable.service
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;gvtg-enable &lt;span class=&quot;nt&quot;&gt;--now&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;premonition note&quot;&gt;&lt;div class=&quot;fa fa-check-square&quot;&gt;&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p class=&quot;header&quot;&gt;Note&lt;/p&gt;&lt;p&gt;The above systemd service will create two vGPU devices, you can repeat the commands with additional unique GUIDs up to a maximum of 8 vGPU if your particular hardware supports it.&lt;/p&gt;


&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can validate that the vGPU devices were created by looking in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sys/devices/pci0000:00/0000:00:02.0/&lt;/code&gt; directory.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lsa&lt;/span&gt; /sys/devices/pci0000:00/0000:00:02.0/56a4c4e2-c81f-4cba-82bf-af46c30ea32d
total 0
lrwxrwxrwx. 1 root root    0 Apr 20 13:56 driver -&amp;gt; ../../../../bus/mdev/drivers/vfio_mdev
drwxr-xr-x. 2 root root    0 Apr 20 14:41 intel_vgpu
lrwxrwxrwx. 1 root root    0 Apr 20 14:41 iommu_group -&amp;gt; ../../../../kernel/iommu_groups/8
lrwxrwxrwx. 1 root root    0 Apr 20 14:41 mdev_type -&amp;gt; ../mdev_supported_types/i915-GVTg_V5_8
drwxr-xr-x. 2 root root    0 Apr 20 14:41 power
&lt;span class=&quot;nt&quot;&gt;--w-------&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; 1 root root 4096 Apr 20 14:41 remove
lrwxrwxrwx. 1 root root    0 Apr 20 13:56 subsystem -&amp;gt; ../../../../bus/mdev
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; 1 root root 4096 Apr 20 13:56 uevent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that ‚Äúmdev_type‚Äù points to ‚Äúi915-GVTg_V5_8‚Äù, this will come into play later when we configure kubevirt to detect the vGPU.&lt;/p&gt;

&lt;h2 id=&quot;install-kubernetes-with-minikube&quot;&gt;Install Kubernetes with minikube&lt;/h2&gt;

&lt;p&gt;We will now install Kubernetes onto our Fedora Workstation. &lt;a href=&quot;https://minikube.sigs.k8s.io/docs/&quot;&gt;Minikube&lt;/a&gt; will help quickly set up our Kubernetes cluster environment. We will start by getting the latest release of minikube and kubectl.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-LO&lt;/span&gt; https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
&lt;span class=&quot;nb&quot;&gt;sudo install &lt;/span&gt;minikube-linux-amd64 /usr/local/bin/minikube
&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;minikube kubectl version | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;', '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'print $3'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'print $2'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed &lt;/span&gt;s/&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;//g&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo install&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/.minikube/cache/linux/&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/kubectl /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will be using the minikube driver ‚Äúnone‚Äù which will install Kubernetes directly onto this machine. This will allow you to maintain a copy of the virtual machines that you build through a reboot. Later in this post we will create persistent volumes for virtual machine storage in ‚Äú/data‚Äù. As previously noted, ensure that you have at least 50Gb of free space in ‚Äú/data‚Äù to complete this setup. The minikube install will take a few minutes to complete.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /data/winhd1-pv
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;minikube start &lt;span class=&quot;nt&quot;&gt;--driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;none &lt;span class=&quot;nt&quot;&gt;--container-runtime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;crio
üòÑ  minikube v1.19.0 on Fedora 32
‚ú®  Using the none driver based on user configuration
üëç  Starting control plane node minikube &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;cluster minikube
ü§π  Running on localhost &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPUs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;12, &lt;span class=&quot;nv&quot;&gt;Memory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;31703MB, &lt;span class=&quot;nv&quot;&gt;Disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;71645MB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
‚ÑπÔ∏è  OS release is Fedora 32 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Workstation Edition&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
üê≥  Preparing Kubernetes v1.20.2 on Docker 20.10.6 ...
    ‚ñ™ Generating certificates and keys ...
    ‚ñ™ Booting up control plane ...
    ‚ñ™ Configuring RBAC rules ...
ü§π  Configuring &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;host environment ...
üîé  Verifying Kubernetes components...
    ‚ñ™ Using image gcr.io/k8s-minikube/storage-provisioner:v5
üåü  Enabled addons: storage-provisioner, default-storageclass
üèÑ  Done! kubectl is now configured to use &lt;span class=&quot;s2&quot;&gt;&quot;minikube&quot;&lt;/span&gt; cluster and &lt;span class=&quot;s2&quot;&gt;&quot;default&quot;&lt;/span&gt; namespace by default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to make our interaction with Kubernetes a little easier, we will need to copy some files and update our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.kube/config&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p ~/.minikube/profiles/minikube
sudo cp -r /root/.kube /home/$USER
sudo cp /root/.minikube/ca.crt /home/$USER/.minikube/ca.crt
sudo cp /root/.minikube/profiles/minikube/client.crt /home/$USER/.minikube/profiles/minikube
sudo cp /root/.minikube/profiles/minikube/client.key /home/$USER/.minikube/profiles/minikube
sudo chown -R $USER:$USER /home/$USER/.kube
sudo chown -R $USER:$USER /home/$USER/.minikube
sed -i  &quot;s/root/home\/$USER/&quot; ~/.kube/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once the minikube install is complete, validate that everything is working properly.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get nodes
NAME       STATUS   ROLES                  AGE    VERSION
kubevirt   Ready    control-plane,master   4m5s   v1.20.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As long as you don‚Äôt get any errors, your base Kubernetes cluster is ready to go.&lt;/p&gt;

&lt;h2 id=&quot;install-kubevirt&quot;&gt;Install kubevirt&lt;/h2&gt;

&lt;p&gt;Our all-in-one Kubernetes cluster is now ready for installing Installing Kubevirt. Using the minikube addons manager, we will install kubevirt into our cluster:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;minikube addons &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;kubevirt
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; kubevirt &lt;span class=&quot;nb&quot;&gt;wait &lt;/span&gt;kubevirt kubevirt &lt;span class=&quot;nt&quot;&gt;--for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Available &lt;span class=&quot;nt&quot;&gt;--timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point, we need to update our instance of kubevirt in the cluster. We need to configure kubevirt to detect the Intel vGPU by giving it an &lt;em&gt;mdevNameSelector&lt;/em&gt; to look for, and a &lt;em&gt;resourceName&lt;/em&gt; to assign to it. The &lt;em&gt;mdevNameSelector&lt;/em&gt; comes from the ‚Äúmdev_type‚Äù that we identified earlier when we created the two virtual GPUs. When the kubevirt device manager finds instances of this mdev type, it will record this information and tag the node with the identified resourceName. We will use this resourceName later when we start up our virtual machine.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; kubevirt-patch.yaml &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
spec:
  configuration:
    developerConfiguration:
      featureGates:
      - GPU
    permittedHostDevices:
      mediatedDevices:
      - mdevNameSelector: &quot;i915-GVTg_V5_8&quot;
        resourceName: &quot;intel.com/U630&quot;
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOF
&lt;/span&gt;kubectl patch kubevirt kubevirt &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; kubevirt &lt;span class=&quot;nt&quot;&gt;--patch&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;kubevirt-patch.yaml&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;merge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We now need to wait for kubevirt to reload its configuration.&lt;/p&gt;

&lt;h3 id=&quot;validate-vgpu-detection&quot;&gt;Validate vGPU detection&lt;/h3&gt;

&lt;p&gt;Now that kubevirt is installed and running, lets ensure that the vGPU was identified correctly. Describe the minikube node, using the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kubectl describe node&lt;/code&gt; and look for the ‚ÄúCapacity‚Äù section. If kubevirt properly detected the vGPU you will see an entry for ‚Äúintel.com/U630‚Äù with a capacity value of greater than 0.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl describe node
Name:               kubevirt
Roles:              control-plane,master
Labels:             beta.kubernetes.io/arch&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;amd64
                    beta.kubernetes.io/os&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;linux
...
Capacity:
  cpu:                            12
  devices.kubevirt.io/kvm:        110
  devices.kubevirt.io/tun:        110
  devices.kubevirt.io/vhost-net:  110
  ephemeral-storage:              71645Mi
  hugepages-1Gi:                  0
  hugepages-2Mi:                  0
  intel.com/U630:                 2
  memory:                         11822640Ki
  pods:                           110
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There it is, intel.com/U630 - two of them are available.  Now all we need is a virtual machine to consume them.&lt;/p&gt;

&lt;h3 id=&quot;install-containerize-data-importer&quot;&gt;Install Containerize Data Importer&lt;/h3&gt;

&lt;p&gt;In order to install Windows 10, we are going to need to upload a Windows 10 install ISO to the cluster. This can be facilitated through the use of the Containerized Data Importer. The following steps are taken from the &lt;a href=&quot;https://kubevirt.io/labs/kubernetes/lab2.html&quot;&gt;Experiment with the Containerized Data Importer (CDI)&lt;/a&gt; web page:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; https://github.com/kubevirt/containerized-data-importer/releases/latest | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;v[0-9]&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0-9]*&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0-9]*&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
kubectl create &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; https://github.com/kubevirt/containerized-data-importer/releases/download/&lt;span class=&quot;nv&quot;&gt;$VERSION&lt;/span&gt;/cdi-operator.yaml
kubectl create &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; https://github.com/kubevirt/containerized-data-importer/releases/download/&lt;span class=&quot;nv&quot;&gt;$VERSION&lt;/span&gt;/cdi-cr.yaml
kubectl &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; cdi &lt;span class=&quot;nb&quot;&gt;wait &lt;/span&gt;cdi cdi &lt;span class=&quot;nt&quot;&gt;--for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Available &lt;span class=&quot;nt&quot;&gt;--timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that our CDI is available, we will expose it for consumption using a nodePort. This will allow us to connect to the cdi-proxy in the next steps.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; cdi-nodeport.yaml &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
apiVersion: v1
kind: Service
metadata:
  name: cdi-proxy-nodeport
  namespace: cdi
spec:
  type: NodePort
  selector:
    cdi.kubevirt.io: cdi-uploadproxy
  ports:
    - port: 8443
      nodePort: 30443
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOF
&lt;/span&gt;kubectl create &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; cdi-nodeport.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One final step, lets get the latest release of virtctl which we will be using as we install Windows.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VERSION=$(kubectl get kubevirt.kubevirt.io/kubevirt -n kubevirt -o=jsonpath=&quot;{.status.observedKubeVirtVersion}&quot;)
curl -L -o virtctl https://github.com/kubevirt/kubevirt/releases/download/${VERSION}/virtctl-${VERSION}-linux-amd64
sudo install virtctl /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;install-windows&quot;&gt;Install Windows&lt;/h2&gt;

&lt;p&gt;At this point we can now install a Windows VM in order to test this feature. The steps below are based on &lt;a href=&quot;https://kubevirt.io/2020/KubeVirt-installing_Microsoft_Windows_from_an_iso.html&quot;&gt;KubeVirt: installing Microsoft Windows from an ISO&lt;/a&gt; however we will be using Windows 10 instead of Windows Server 2012. The commands below assume that you have a Windows 10 ISO file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;win10-virtio.iso&lt;/code&gt;. If you need a Windows 10 CD, please see &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10&quot;&gt;Download Windows 10 Disk Image&lt;/a&gt; and come back here after you have obtained your install CD.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virtctl image-upload &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;--image-path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;win10-virtio.iso &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;--pvc-name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;iso-win10 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;--access-mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ReadWriteOnce &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;--pvc-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6G &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;--uploadproxy-url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://127.0.0.1:30443 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;--insecure&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;--wait-secs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;240
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need a place to store our Windows 10 virtual disk, use the following to create a 40Gb space to store our file. In order to do this within minikube we will manually create a PersistentVolume (PV) as well as a PersistentVolumeClaim (PVC). These steps assume that you have 45+ GiB of free space in ‚Äú/‚Äù.  We will create a ‚Äú/data‚Äù directory as well as a subdirectory for storing our PV. If you do not have at least 45 GiB of free space in ‚Äú/‚Äù, you will need to free up space, or mount storage on ‚Äú/data‚Äù to continue.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; win10-pvc.yaml &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pvwinhd1
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 43Gi
  claimRef:
    namespace: default
    name: winhd1
  hostPath:
    path: /data/winhd1-pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: winhd1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOF
&lt;/span&gt;kubectl create &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; win10-pvc.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can now create our Windows 10 virtual machine. Use the following to create a virtual machine definition file that includes a vGPU:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; win10vm1.yaml &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachine
metadata:
  name: win10vm1
spec:
  running: false
  template:
    metadata:
      creationTimestamp: null
      labels:
        kubevirt.io/domain: win10vm1
    spec:
      domain:
        clock:
          timer:
            hpet:
              present: false
            hyperv: {}
            pit:
              tickPolicy: delay
            rtc:
              tickPolicy: catchup
          utc: {}
        cpu:
          cores: 1
          sockets: 2
          threads: 1
        devices:
          gpus:
          - deviceName: intel.com/U630
            name: gpu1
          disks:
          - cdrom:
              bus: sata
            name: windows-guest-tools
          - bootOrder: 1
            cdrom:
              bus: sata
            name: cdrom
          - bootOrder: 2
            disk:
              bus: sata
            name: disk-1
          inputs:
          - bus: usb
            name: tablet
            type: tablet
          interfaces:
          - masquerade: {}
            model: e1000e
            name: nic-0
        features:
          acpi: {}
          apic: {}
          hyperv:
            relaxed: {}
            spinlocks:
              spinlocks: 8191
            vapic: {}
        machine:
          type: pc-q35-rhel8.2.0
        resources:
          requests:
            memory: 8Gi
      hostname: win10vm1
      networks:
      - name: nic-0
        pod: {}
      terminationGracePeriodSeconds: 3600
      volumes:
        - name: cdrom
          persistentVolumeClaim:
            claimName: iso-win10
        - name: disk-1
          persistentVolumeClaim:
            claimName: winhd1
        - containerDisk:
            image: quay.io/kubevirt/virtio-container-disk
          name: windows-guest-tools
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOF
&lt;/span&gt;kubectl create &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; win10vm1.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;premonition note&quot;&gt;&lt;div class=&quot;fa fa-check-square&quot;&gt;&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p class=&quot;header&quot;&gt;NOTE&lt;/p&gt;&lt;p&gt;This VM is not optimized to use virtio devices to simplify the OS install. By using SATA devices as well as an emulated e1000 network card, we do not need to worry about loading additional drivers.&lt;/p&gt;


&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The key piece of information that we have added to this virtual machine definition is this snippet of yaml:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        &lt;span class=&quot;na&quot;&gt;devices&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;gpus&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;deviceName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;intel.com/U630&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;gpu1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we are identifying the gpu device that we want to attach to this VM. The deviceName relates back to the name that we gave to kubevirt to identify the Intel GPU resources. It also is the same identifier that shows up in the ‚ÄúCapacity‚Äù section of a node when you run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kubectl describe node&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can now start the virtual machine:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virtctl start win10vm1
kubectl get vmi --watch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When the output of shows that the vm is in a ‚ÄúRunning‚Äù phase you can ‚ÄúCTRL+C‚Äù to end the watch command.&lt;/p&gt;

&lt;h2 id=&quot;accessing-the-windows-vm&quot;&gt;Accessing the Windows VM&lt;/h2&gt;

&lt;p&gt;Since we are running this VM on this local machine, we can now take advantage of the virtctl command to connect to the VNC console of the virtual machine.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virtctl vnc win10vm1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A new VNC Viewer window will open and you should now see the Windows 10 install screen. Follow standard Windows 10 install steps at this point.&lt;/p&gt;

&lt;p&gt;Once the install is complete you have a Windows 10 VM running with a GPU available. You can test that GPU acceleration is available by opening the Windows 10 task manager, selecting Advanced and then select the ‚ÄúPerformance‚Äù tab. Note that the first time you start up, Windows is still detecting and installing the appropriate drivers. It may take a minute or two for the GPU information to show up in the Performance tab.&lt;/p&gt;

&lt;p&gt;Try testing out the GPU acceleration. Open a web browser in your VM and navigate to ‚Äúhttp://www.fishgl.com‚Äù HOWEVER don‚Äôt be surprised by the poor performance. The default kubevirt console does not take advantage of the GPU. For that we need to take one final step to use the Windows Remote Desktop Protocol (RDP) which can use the GPU.&lt;/p&gt;

&lt;h2 id=&quot;using-the-gpu&quot;&gt;Using the GPU&lt;/h2&gt;

&lt;p&gt;In order to take advantage of the virtual GPU we have added, we will need to connect to the virtual machine over Remote Desktop Protocol (RDP). Follow these steps to enable RDP:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;In the Windows 10 search bar, type ‚Äú&lt;strong&gt;Remote Desktop Settings&lt;/strong&gt;‚Äù and then open the result.&lt;/li&gt;
  &lt;li&gt;Select ‚Äú&lt;strong&gt;Enable Remote Desktop&lt;/strong&gt;‚Äù and confirm the change.&lt;/li&gt;
  &lt;li&gt;Select ‚Äú&lt;strong&gt;Advanced settings&lt;/strong&gt;‚Äù and un-check ‚Äú&lt;strong&gt;Require computers to use Network level Authentication&lt;/strong&gt;‚Äù, and confirm this change.&lt;/li&gt;
  &lt;li&gt;Finally reboot the Windows 10 Virtual machine.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, run the following commands in order to expose the RDP server to outside your Kubernetes cluster:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virtctl expose vm win10vm1 &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3389 &lt;span class=&quot;nt&quot;&gt;--type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NodePort &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;win10vm1-rdp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kubectl get svc
NAME           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;          AGE
kubernetes     ClusterIP   10.96.0.1        &amp;lt;none&amp;gt;        443/TCP          18h
win10vm1-rdp   NodePort    10.105.159.184   &amp;lt;none&amp;gt;        3389:30627/TCP   39s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note the port that was assigned to this service we will use it in the next step. In the above output the port is 30627.&lt;/p&gt;

&lt;p&gt;We can now use the rdesktop tool to connect to our VM and get the full advantages of the vGPU. From a command line run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdesktop localhost:&amp;lt;port&amp;gt;&lt;/code&gt; being sure to update the port based on the output from above. When prompted by rdesktop accept the certificate. Log into your Windows 10 client. You can now test out the vGPU.&lt;/p&gt;

&lt;p&gt;Let‚Äôs try FishGL again. Open a browser and go to &lt;a href=&quot;http://www.fishgl.com&quot;&gt;http://www.fishgl.com&lt;/a&gt;. You should notice a large improvement in the applications performance. You can also open the Task Manager and look at the performance tab to see the GPU under load.
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;my-gallery&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageGallery&quot;&gt;
  &lt;figure itemprop=&quot;associatedMedia&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;
    &lt;a href=&quot;/assets/2021-04-30-intel-vgpu-kubevirt/fishgl-gpu.png&quot; itemprop=&quot;contentUrl&quot; data-size=&quot;800x530&quot;&gt;
      &lt;img src=&quot;/assets/2021-04-30-intel-vgpu-kubevirt/fishgl-gpu.png&quot; itemprop=&quot;thumbnail&quot; width=&quot;100%&quot; alt=&quot;FishGL&quot; /&gt;
    &lt;/a&gt;
    &lt;figcaption itemprop=&quot;caption description&quot;&gt;&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Note that since you are running your Fedora 32 workstation on this same GPU you are already sharing the graphics workload between your primary desktop, and the virtualized Windows Desktop also running on this machine.&lt;/p&gt;

&lt;p&gt;Congratulations! You now have a VM running in Kubernetes using an Intel vGPU. If your test machine has enough resources you can repeat the steps and create multiple virtual machines all sharing the one Intel GPU.&lt;/p&gt;</content><author><name>Mark DeNeve</name></author><category term="news" /><category term="kubevirt" /><category term="vGPU" /><category term="Windows" /><category term="GPU" /><category term="Intel" /><category term="minikube" /><category term="Fedora" /><summary type="html">Introduction Prerequisites Fedora Workstation Prep Preparing the Intel vGPU driver Install Kubernetes with minikube Install kubevirt Validate vGPU detection Install Containerize Data Importer Install Windows Accessing the Windows VM Using the GPU</summary></entry><entry><title type="html">Automated Windows Installation With Tekton Pipelines</title><link href="https://kubevirt.io//2021/Automated-Windows-Installation-With-Tekton-Pipelines.html" rel="alternate" type="text/html" title="Automated Windows Installation With Tekton Pipelines" /><published>2021-04-21T00:00:00+00:00</published><updated>2021-04-21T00:00:00+00:00</updated><id>https://kubevirt.io//2021/Automated-Windows-Installation-With-Tekton-Pipelines</id><content type="html" xml:base="https://kubevirt.io//2021/Automated-Windows-Installation-With-Tekton-Pipelines.html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;This blog shows how we can easily automate a process of installing Windows VMs on KubeVirt with &lt;a href=&quot;https://github.com/tektoncd/pipeline&quot;&gt;Tekton Pipelines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tekton Pipelines can be used to create a single &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pipeline&lt;/code&gt; that encapsulates the installation process which can be run and replicated with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PipelineRuns&lt;/code&gt;. 
The pipeline will be built with &lt;a href=&quot;https://github.com/kubevirt/kubevirt-tekton-tasks&quot;&gt;KubeVirt Tekton Tasks&lt;/a&gt;, which includes all the necessary tasks for this example.&lt;/p&gt;

&lt;h2 id=&quot;pipeline-description&quot;&gt;Pipeline Description&lt;/h2&gt;

&lt;p&gt;The pipeline will prepare an empty Persistent Volume Claim (PVC) and download a Windows source ISO into another PVC. Both of them will be initialized with Containerized Data Importer (CDI).
It will then spin up an installation VM and use Windows Answer Files to automatically install the VM.
Then the pipeline will wait for the installation to complete and will delete the installation VM while keeping the artifact PVC with the installed operating system.
You can later use the artifact PVC as a base image and copy it for new VMs.&lt;/p&gt;
&lt;h1 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;KubeVirt &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.39.0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Tekton Pipelines &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.19.0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;KubeVirt Tekton Tasks &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.3.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;running-windows-installer-pipeline&quot;&gt;Running Windows Installer Pipeline&lt;/h1&gt;

&lt;h2 id=&quot;obtaining-a-url-of-windows-source-iso&quot;&gt;Obtaining a URL of Windows Source ISO&lt;/h2&gt;

&lt;p&gt;First we have to obtain a Download URL of Windows Source ISO.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to https://www.microsoft.com/en-us/software-download/windows10ISO. You can also obtain a server edition for evaluation at https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2019.&lt;/li&gt;
  &lt;li&gt;Fill in the edition and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;English&lt;/code&gt; language (other languages need to be updated in windows-10-autounattend ConfigMap below) and go to the download page.&lt;/li&gt;
  &lt;li&gt;Right-click on the 64-bit download button and copy the download link. The link should be valid for 24 hours.  We will need this URL a bit later when running the pipeline.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;preparing-autounattendxml-configmap&quot;&gt;Preparing autounattend.xml ConfigMap&lt;/h2&gt;

&lt;p&gt;Now we have to prepare our autounattend.xml Answer File with the installation instructions. We will store it in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfigMap&lt;/code&gt;, but optionally it can be stored in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secret&lt;/code&gt; as well.&lt;/p&gt;

&lt;p&gt;The configuration file can be generated with &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/wsim/windows-system-image-manager-overview-topics&quot;&gt;Windows SIM&lt;/a&gt;
or it can be specified manually according to &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/wsim/answer-files-overview&quot;&gt;Answer File Reference&lt;/a&gt;
and &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/components-b-unattend&quot;&gt;Answer File Components Reference&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following config map includes the required drivers and guest disk configuration.
It also specifies how the installation should proceed and what users should be created. 
In our case it is an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Administrator&lt;/code&gt; user with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changepassword&lt;/code&gt; password. 
You can also change the Answer File according to your needs by consulting the already mentioned documentation.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ConfigMap&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-10-autounattend&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;Autounattend.xml&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;unattend xmlns=&quot;urn:schemas-microsoft-com:unattend&quot;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;settings pass=&quot;windowsPE&quot;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-PnpCustomizationsWinPE&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; processorArchitecture=&quot;amd64&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;DriverPaths&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;PathAndCredentials wcm:action=&quot;add&quot; wcm:keyValue=&quot;1&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Path&amp;gt;E:\viostor\w10\amd64&amp;lt;/Path&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/PathAndCredentials&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;PathAndCredentials wcm:action=&quot;add&quot; wcm:keyValue=&quot;2&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Path&amp;gt;E:\NetKVM\w10\amd64&amp;lt;/Path&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/PathAndCredentials&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;PathAndCredentials wcm:action=&quot;add&quot; wcm:keyValue=&quot;3&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Path&amp;gt;E:\viorng\w10\amd64&amp;lt;/Path&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/PathAndCredentials&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/DriverPaths&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-International-Core-WinPE&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;SetupUILanguage&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;UILanguage&amp;gt;en-US&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/SetupUILanguage&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;InputLocale&amp;gt;0409:00000409&amp;lt;/InputLocale&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;SystemLocale&amp;gt;en-US&amp;lt;/SystemLocale&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;UILanguage&amp;gt;en-US&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;UILanguageFallback&amp;gt;en-US&amp;lt;/UILanguageFallback&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;UserLocale&amp;gt;en-US&amp;lt;/UserLocale&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-Setup&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;DiskConfiguration&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;Disk wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;CreatePartitions&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;CreatePartition wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;1&amp;lt;/Order&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Type&amp;gt;Primary&amp;lt;/Type&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Size&amp;gt;100&amp;lt;/Size&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;/CreatePartition&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;CreatePartition wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Extend&amp;gt;true&amp;lt;/Extend&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;2&amp;lt;/Order&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Type&amp;gt;Primary&amp;lt;/Type&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;/CreatePartition&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;/CreatePartitions&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;ModifyPartitions&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;ModifyPartition wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Active&amp;gt;true&amp;lt;/Active&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Format&amp;gt;NTFS&amp;lt;/Format&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Label&amp;gt;System Reserved&amp;lt;/Label&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;1&amp;lt;/Order&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;PartitionID&amp;gt;1&amp;lt;/PartitionID&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;TypeID&amp;gt;0x27&amp;lt;/TypeID&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;/ModifyPartition&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;ModifyPartition wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Active&amp;gt;true&amp;lt;/Active&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Format&amp;gt;NTFS&amp;lt;/Format&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Label&amp;gt;OS&amp;lt;/Label&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Letter&amp;gt;C&amp;lt;/Letter&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;2&amp;lt;/Order&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;PartitionID&amp;gt;2&amp;lt;/PartitionID&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;/ModifyPartition&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;/ModifyPartitions&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;DiskID&amp;gt;0&amp;lt;/DiskID&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;WillWipeDisk&amp;gt;true&amp;lt;/WillWipeDisk&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/Disk&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/DiskConfiguration&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;ImageInstall&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;OSImage&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;InstallTo&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;DiskID&amp;gt;0&amp;lt;/DiskID&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;PartitionID&amp;gt;2&amp;lt;/PartitionID&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;/InstallTo&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;InstallToAvailablePartition&amp;gt;false&amp;lt;/InstallToAvailablePartition&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/OSImage&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/ImageInstall&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;UserData&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;AcceptEula&amp;gt;true&amp;lt;/AcceptEula&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;FullName&amp;gt;Administrator&amp;lt;/FullName&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;Organization&amp;gt;&amp;lt;/Organization&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;ProductKey&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Key&amp;gt;W269N-WFGWX-YVC9B-4J6C9-T83GX&amp;lt;/Key&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/ProductKey&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/UserData&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;settings pass=&quot;offlineServicing&quot;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-LUA-Settings&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;EnableLUA&amp;gt;false&amp;lt;/EnableLUA&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;settings pass=&quot;generalize&quot;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-Security-SPP&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;SkipRearm&amp;gt;1&amp;lt;/SkipRearm&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;settings pass=&quot;specialize&quot;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-International-Core&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;InputLocale&amp;gt;0409:00000409&amp;lt;/InputLocale&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;SystemLocale&amp;gt;en-US&amp;lt;/SystemLocale&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;UILanguage&amp;gt;en-US&amp;lt;/UILanguage&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;UILanguageFallback&amp;gt;en-US&amp;lt;/UILanguageFallback&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;UserLocale&amp;gt;en-US&amp;lt;/UserLocale&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-Security-SPP-UX&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;SkipAutoActivation&amp;gt;true&amp;lt;/SkipAutoActivation&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-SQMApi&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;CEIPEnabled&amp;gt;0&amp;lt;/CEIPEnabled&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-Shell-Setup&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;ComputerName&amp;gt;WindowsVM&amp;lt;/ComputerName&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;ProductKey&amp;gt;W269N-WFGWX-YVC9B-4J6C9-T83GX&amp;lt;/ProductKey&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;settings pass=&quot;oobeSystem&quot;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;component name=&quot;Microsoft-Windows-Shell-Setup&quot; processorArchitecture=&quot;amd64&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; language=&quot;neutral&quot; versionScope=&quot;nonSxS&quot; xmlns:wcm=&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;AutoLogon&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;Password&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Value&amp;gt;changepassword&amp;lt;/Value&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;PlainText&amp;gt;true&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/Password&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;Enabled&amp;gt;true&amp;lt;/Enabled&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;Username&amp;gt;Administrator&amp;lt;/Username&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/AutoLogon&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;OOBE&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;HideEULAPage&amp;gt;true&amp;lt;/HideEULAPage&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;HideOEMRegistrationScreen&amp;gt;true&amp;lt;/HideOEMRegistrationScreen&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;HideOnlineAccountScreens&amp;gt;true&amp;lt;/HideOnlineAccountScreens&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;HideWirelessSetupInOOBE&amp;gt;true&amp;lt;/HideWirelessSetupInOOBE&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;NetworkLocation&amp;gt;Home&amp;lt;/NetworkLocation&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;SkipUserOOBE&amp;gt;true&amp;lt;/SkipUserOOBE&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;SkipMachineOOBE&amp;gt;true&amp;lt;/SkipMachineOOBE&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;ProtectYourPC&amp;gt;3&amp;lt;/ProtectYourPC&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/OOBE&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;UserAccounts&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;LocalAccounts&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;LocalAccount wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;Password&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;Value&amp;gt;changepassword&amp;lt;/Value&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;s&quot;&gt;&amp;lt;PlainText&amp;gt;true&amp;lt;/PlainText&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;/Password&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;Description&amp;gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;DisplayName&amp;gt;Administrator&amp;lt;/DisplayName&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;Group&amp;gt;Administrators&amp;lt;/Group&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&amp;lt;Name&amp;gt;Administrator&amp;lt;/Name&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;/LocalAccount&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/LocalAccounts&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/UserAccounts&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;RegisteredOrganization&amp;gt;&amp;lt;/RegisteredOrganization&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;RegisteredOwner&amp;gt;Administrator&amp;lt;/RegisteredOwner&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;DisableAutoDaylightTimeSet&amp;gt;false&amp;lt;/DisableAutoDaylightTimeSet&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;FirstLogonCommands&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;SynchronousCommand wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Description&amp;gt;Control Panel View&amp;lt;/Description&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;1&amp;lt;/Order&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;CommandLine&amp;gt;reg add &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel&quot; /v StartupPage /t REG_DWORD /d 1 /f&amp;lt;/CommandLine&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;RequiresUserInput&amp;gt;true&amp;lt;/RequiresUserInput&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/SynchronousCommand&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;SynchronousCommand wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;2&amp;lt;/Order&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Description&amp;gt;Control Panel Icon Size&amp;lt;/Description&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;RequiresUserInput&amp;gt;false&amp;lt;/RequiresUserInput&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;CommandLine&amp;gt;reg add &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel&quot; /v AllItemsIconView /t REG_DWORD /d 0 /f&amp;lt;/CommandLine&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/SynchronousCommand&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;SynchronousCommand wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;3&amp;lt;/Order&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;RequiresUserInput&amp;gt;false&amp;lt;/RequiresUserInput&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;CommandLine&amp;gt;cmd /C wmic useraccount where name=&quot;Administrator&quot; set PasswordExpires=false&amp;lt;/CommandLine&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Description&amp;gt;Password Never Expires&amp;lt;/Description&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/SynchronousCommand&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;SynchronousCommand wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;4&amp;lt;/Order&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Description&amp;gt;Remove AutoAdminLogon&amp;lt;/Description&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;RequiresUserInput&amp;gt;false&amp;lt;/RequiresUserInput&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;CommandLine&amp;gt;reg add &quot;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon&quot; /v AutoAdminLogon /t REG_SZ /d 0 /f&amp;lt;/CommandLine&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/SynchronousCommand&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;SynchronousCommand wcm:action=&quot;add&quot;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Order&amp;gt;5&amp;lt;/Order&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;RequiresUserInput&amp;gt;false&amp;lt;/RequiresUserInput&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;CommandLine&amp;gt;cmd /c shutdown /s /f /t 10&amp;lt;/CommandLine&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&amp;lt;Description&amp;gt;Shuts down the system&amp;lt;/Description&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&amp;lt;/SynchronousCommand&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;/FirstLogonCommands&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;lt;TimeZone&amp;gt;Alaskan Standard Time&amp;lt;/TimeZone&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;lt;/unattend&amp;gt;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-the-pipeline&quot;&gt;Creating the Pipeline&lt;/h2&gt;

&lt;p&gt;Let‚Äôs create a pipeline which consists of the following tasks.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  create-source-dv --- create-vm-from-manifest --- wait-for-vmi-status --- cleanup-vm
                    |
    create-base-dv --
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-source-dv&lt;/code&gt; task downloads a Windows source ISO into a PVC called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows-10-source-*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-base-dv&lt;/code&gt; task creates an empty PVC for new windows installation called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows-10-base-*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-vm-from-manifest&lt;/code&gt; task creates a VM called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows-installer-*&lt;/code&gt;
from the empty PVC and with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows-10-source-*&lt;/code&gt; PVC attached as a CD-ROM.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wait-for-vmi-status&lt;/code&gt; task waits until the VM shuts down.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cleanup-vm&lt;/code&gt; deletes the installer VM and ISO PVC.&lt;/li&gt;
  &lt;li&gt;The output artifact will be the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows-10-base-*&lt;/code&gt; PVC with the Windows installation.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tekton.dev/v1beta1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Pipeline&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-installer&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;winImageDownloadURL&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;autounattendConfigMapName&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-10-autounattend&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;string&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-source-dv&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;manifest&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;apiVersion: cdi.kubevirt.io/v1beta1&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;kind: DataVolume&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;metadata:&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;generateName: windows-10-source-&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;spec:&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;pvc:&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;accessModes:&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;- ReadWriteOnce&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;resources:&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;requests:&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;storage: 7Gi&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;volumeMode: Filesystem&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;source:&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;http:&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;url: $(params.winImageDownloadURL)&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;waitForSuccess&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true'&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2h'&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;taskRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterTask&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-datavolume-from-manifest&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-base-dv&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;manifest&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;apiVersion: cdi.kubevirt.io/v1beta1&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;kind: DataVolume&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;metadata:&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;generateName: windows-10-base-&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;spec:&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;pvc:&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;accessModes:&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;- ReadWriteOnce&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;resources:&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;requests:&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;storage: 20Gi&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;volumeMode: Filesystem&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;source:&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;blank: {}&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;waitForSuccess&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true'&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;taskRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterTask&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-datavolume-from-manifest&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-vm-from-manifest&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;manifest&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;apiVersion: kubevirt.io/v1alpha3&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;kind: VirtualMachine&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;metadata:&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;generateName: windows-installer-&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;annotation:&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;description: Windows VM generated by windows-installer pipeline&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;labels:&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;app: windows-installer&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;spec:&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;runStrategy: RerunOnFailure&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;template:&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;metadata:&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;labels:&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;kubevirt.io/domain: windows-installer&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;spec:&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;domain:&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;cpu:&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;sockets: 2&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;cores: 1&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;threads: 1&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;resources:&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;requests:&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;memory: 2Gi&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;devices:&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;disks:&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;- name: installcdrom&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;cdrom:&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;bus: sata&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;bootOrder: 1&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;- name: rootdisk&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;bootOrder: 2&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;disk:&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;bus: virtio&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;- name: virtiocontainerdisk&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;cdrom:&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;bus: sata&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;- name: sysprepconfig&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;cdrom:&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;bus: sata&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;interfaces:&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;- bridge: {}&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;name: default&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;inputs:&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;- type: tablet&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;bus: usb&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;name: tablet&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;networks:&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;- name: default&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;pod: {}&lt;/span&gt;
                  &lt;span class=&quot;s&quot;&gt;volumes:&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;- name: installcdrom&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;- name: rootdisk&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;- name: virtiocontainerdisk&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;containerDisk:&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;image: kubevirt/virtio-container-disk&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;- name: sysprepconfig&lt;/span&gt;
                      &lt;span class=&quot;s&quot;&gt;sysprep:&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;configMap:&lt;/span&gt;
                          &lt;span class=&quot;s&quot;&gt;name: $(params.autounattendConfigMapName)&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ownDataVolumes&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;installcdrom:$(tasks.create-source-dv.results.name)&quot;&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dataVolumes&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;rootdisk:$(tasks.create-base-dv.results.name)&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;runAfter&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-source-dv&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-base-dv&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;taskRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterTask&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-vm-from-manifest&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wait-for-vmi-status&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;vmiName&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$(tasks.create-vm-from-manifest.results.name)&quot;&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;successCondition&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;status.phase&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Succeeded&quot;&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;failureCondition&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;status.phase&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(Failed,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Unknown)&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;runAfter&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-vm-from-manifest&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2h'&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;taskRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterTask&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wait-for-vmi-status&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cleanup-vm&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;vmName&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$(tasks.create-vm-from-manifest.results.name)&quot;&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;delete&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;runAfter&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wait-for-vmi-status&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;taskRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ClusterTask&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cleanup-vm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;running-the-pipeline&quot;&gt;Running the Pipeline&lt;/h2&gt;

&lt;p&gt;To run the pipeline we need to create the following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PipelineRun&lt;/code&gt; which references our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pipeline&lt;/code&gt;. 
Before we do that, we should replace DOWNLOAD_URL with the Windows source URL we obtained earlier.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PipelineRun&lt;/code&gt; also specifies the serviceAccount names for all the steps/tasks and the timeout for the whole &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pipeline&lt;/code&gt;.
The timeout should be changed appropriately; for example if you have a slow download connection.
You can also set a timeout for each task in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pipeline&lt;/code&gt; definition.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tekton.dev/v1beta1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PipelineRun&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;generateName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-installer-run-&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;winImageDownloadURL&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DOWNLOAD_URL&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;pipelineRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-installer&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5h'&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;serviceAccountNames&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;taskName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-source-dv&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-datavolume-from-manifest-task&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;taskName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-base-dv&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-datavolume-from-manifest-task&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;taskName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-vm-from-manifest&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;create-vm-from-manifest-task&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;taskName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wait-for-vmi-status&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wait-for-vmi-status-task&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;taskName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cleanup-vm&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cleanup-vm-task&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;inspecting-the-output&quot;&gt;Inspecting the output&lt;/h2&gt;

&lt;p&gt;Firstly, you can inspect the progress of the windows-10-source and windows-10-base import:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl get dvs | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;windows-10-

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; windows-10-base-8zxwr     Succeeded          100.0%                21s
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; windows-10-source-jdv64   ImportInProgress   1.01%                 20s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To inspect the status of the pipeline run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl get pipelinerun &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tekton.dev/pipeline=windows-installer&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; NAME                          SUCCEEDED   REASON                          STARTTIME   COMPLETIONTIME
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; windows-installer-run-n2mjf   Unknown     Running                         118s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To check the status of each task and its pods:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl get pipelinerun &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; yaml &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tekton.dev/pipeline=windows-installer&quot;&lt;/span&gt;
kubectl get pods &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tekton.dev/pipeline=windows-installer&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once the pipeline run completes, you should be left with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows-10-base-xxxxx&lt;/code&gt; PVC (backed by a DataVolume).
You can then create a new VM with a copy of this PVC to test it.
You need to replace PVC_NAME with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;windows-10-base-xxxxx&lt;/code&gt; (you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kubectl get dvs -o name | grep -o &quot;windows-10-base-.*&quot;&lt;/code&gt;) and PVC_NAMESPACE with the correct namespace in the following YAML.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubevirt.io/v1alpha3&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;VirtualMachine&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-10-vm&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;dataVolumeTemplates&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cdi.kubevirt.io/v1beta1&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DataVolume&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-10-vm-root&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;pvc&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;accessModes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ReadWriteMany&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;20Gi&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;pvc&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PVC_NAME&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PVC_NAMESPACE&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;running&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;kubevirt.io/domain&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-10-vm&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;sockets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;cores&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;threads&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2Gi&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;devices&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;disks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rootdisk&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;bootOrder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;virtio&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;virtiocontainerdisk&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;cdrom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sata&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;interfaces&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bridge&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{}&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tablet&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;usb&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tablet&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;networks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;pod&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{}&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rootdisk&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;dataVolume&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;windows-10-vm-root&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;virtiocontainerdisk&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;containerDisk&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubevirt/virtio-container-disk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can start the VM and login with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Administrator&lt;/code&gt; : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;changepassword&lt;/code&gt; credentials. Then you should be welcomed by your fresh VM.&lt;/p&gt;

&lt;div class=&quot;zoom&quot;&gt;
  &lt;img src=&quot;/assets/2021-04-21-Automated-Windows-Installation-With-Tekton-Pipelines/win-started.png&quot; width=&quot;100&quot; height=&quot;75&quot; itemprop=&quot;thumbnail&quot; alt=&quot;Started Windows VM&quot; /&gt;
&lt;/div&gt;

&lt;h1 id=&quot;resources&quot;&gt;Resources&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kubevirt/kubevirt-tekton-tasks/tree/main/examples/pipelines/windows-installer&quot;&gt;YAML files used in this example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kubevirt/kubevirt-tekton-tasks&quot;&gt;KubeVirt Tekton Tasks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tektoncd/pipeline&quot;&gt;Tekton Pipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Filip K≈ôepinsk√Ω</name></author><category term="news" /><category term="kubevirt" /><category term="Kubernetes" /><category term="virtual machine" /><category term="VM" /><category term="Tekton Pipelines" /><category term="KubeVirt Tekton Tasks" /><category term="Windows" /><summary type="html">Introduction</summary></entry><entry><title type="html">KubeVirt v0.40.0</title><link href="https://kubevirt.io//2021/changelog-v0.40.0.html" rel="alternate" type="text/html" title="KubeVirt v0.40.0" /><published>2021-04-19T00:00:00+00:00</published><updated>2021-04-19T00:00:00+00:00</updated><id>https://kubevirt.io//2021/changelog-v0.40.0</id><content type="html" xml:base="https://kubevirt.io//2021/changelog-v0.40.0.html">&lt;h2 id=&quot;v0400&quot;&gt;v0.40.0&lt;/h2&gt;

&lt;p&gt;Released on: Mon Apr 19 12:25:41 2021 +0000&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[PR #5467][rmohr] Fixes upgrades from KubeVirt v0.36&lt;/li&gt;
  &lt;li&gt;[PR #5350][jean-edouard] Removal of entire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;permittedHostDevices&lt;/code&gt; section will now remove all user-defined host device plugins.&lt;/li&gt;
  &lt;li&gt;[PR #5242][jean-edouard] Creating more than 1 migration at the same time for a given VMI will now fail&lt;/li&gt;
  &lt;li&gt;[PR #4907][vasiliy-ul] Initial cgroupv2 support&lt;/li&gt;
  &lt;li&gt;[PR #5324][jean-edouard] Default feature gates can now be defined in the provider configuration.&lt;/li&gt;
  &lt;li&gt;[PR #5006][alicefr] Add discard=unmap option&lt;/li&gt;
  &lt;li&gt;[PR #5022][davidvossel] Fixes race condition between operator adding service and webhooks that can result in installs/uninstalls failing&lt;/li&gt;
  &lt;li&gt;[PR #5310][ashleyschuett] Reconcile CRD resources&lt;/li&gt;
  &lt;li&gt;[PR #5102][iholder-redhat] Go version updated to 1.14.14&lt;/li&gt;
  &lt;li&gt;[PR #4746][ashleyschuett] Reconcile Deployments, DaemonSets, MutatingWebhookConfigurations and ValidatingWebhookConfigurations&lt;/li&gt;
  &lt;li&gt;[PR #5037][ormergi] Hot-plug SR-IOV VF interfaces to VM‚Äôs post a successful migration.&lt;/li&gt;
  &lt;li&gt;[PR #5269][mlsorensen] Prometheus metrics scraped from virt-handler are now served from the VMI informer cache, rather than calling back to the Kubernetes API for VMI information.&lt;/li&gt;
  &lt;li&gt;[PR #5138][davidvossel] virt-handler now waits up to 5 minutes for all migrations on the node to complete before shutting down.&lt;/li&gt;
  &lt;li&gt;[PR #5191][yuvalturg] Added a metric for monitoring CPU affinity&lt;/li&gt;
  &lt;li&gt;[PR #5215][xphyr] Enable detection of Intel GVT-g vGPU.&lt;/li&gt;
  &lt;li&gt;[PR #4760][rmohr] Make virt-handler heartbeat more efficient and robust: Only one combined PATCH and no need to detect different cluster types anymore.&lt;/li&gt;
  &lt;li&gt;[PR #5091][iholder-redhat] QEMU SeaBios debug logs are being seen as part of virt-launcher log.&lt;/li&gt;
  &lt;li&gt;[PR #5221][rmohr] Remove  workload placement validation webhook which blocks placement updates when VMIs are running&lt;/li&gt;
  &lt;li&gt;[PR #5128][yuvalturg] Modified memory related metrics by adding several new metrics and splitting the swap traffic bytes metric&lt;/li&gt;
  &lt;li&gt;[PR #5084][ashleyschuett] Add validation to CustomizeComponents object on the KubeVirt resource&lt;/li&gt;
  &lt;li&gt;[PR #5182][davidvossel] New [release-blocker] functional test marker to signify tests that can never be disabled before making a release&lt;/li&gt;
  &lt;li&gt;[PR #5137][davidvossel] Added our policy around release branch backporting in docs/release-branch-backporting.md&lt;/li&gt;
  &lt;li&gt;[PR #5096][yuvalturg] Modified networking metrics by adding new metrics, splitting existing ones by rx/tx and using the device alias for the interface name when available&lt;/li&gt;
  &lt;li&gt;[PR #5088][awels] Hotplug works with hostpath storage.&lt;/li&gt;
  &lt;li&gt;[PR #4908][dhiller] Move travis tag and master builds to kubevirt prow.&lt;/li&gt;
  &lt;li&gt;[PR #4741][EdDev] Allow live migration for SR-IOV VM/s without preserving the VF interfaces.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>kubeü§ñ</name></author><category term="releases" /><category term="release notes" /><category term="changelog" /><summary type="html">v0.40.0</summary></entry><entry><title type="html">KubeVirt v0.39.0</title><link href="https://kubevirt.io//2021/changelog-v0.39.0.html" rel="alternate" type="text/html" title="KubeVirt v0.39.0" /><published>2021-03-10T00:00:00+00:00</published><updated>2021-03-10T00:00:00+00:00</updated><id>https://kubevirt.io//2021/changelog-v0.39.0</id><content type="html" xml:base="https://kubevirt.io//2021/changelog-v0.39.0.html">&lt;h2 id=&quot;v0390&quot;&gt;v0.39.0&lt;/h2&gt;

&lt;p&gt;Released on: Wed Mar 10 14:51:58 2021 +0000&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[PR #5010][jean-edouard] Migrated VMs stay persistent and can therefore survive S3, among other things.&lt;/li&gt;
  &lt;li&gt;[PR #4952][ashleyschuett] Create warning NodeUnresponsive event if a node is running a VMI pod but not a virt-handler pod&lt;/li&gt;
  &lt;li&gt;[PR #4686][davidvossel] Automated workload updates via new KubeVirt WorkloadUpdateStrategy API&lt;/li&gt;
  &lt;li&gt;[PR #4886][awels] Hotplug support for WFFC datavolumes.&lt;/li&gt;
  &lt;li&gt;[PR #5026][AlonaKaplan] virt-launcher, masquerade binding - prefer nft over iptables.&lt;/li&gt;
  &lt;li&gt;[PR #4921][borod108] Added support for Sysprep in the API. A user can now add a answer file through a ConfigMap or a Secret. The User Guide is updated accordingly. /kind feature&lt;/li&gt;
  &lt;li&gt;[PR #4874][ormergi] Add new feature-gate SRIOVLiveMigration,&lt;/li&gt;
  &lt;li&gt;[PR #4917][iholder-redhat] Now it is possible to enable QEMU SeaBios debug logs setting virt-launcher log verbosity to be greater than 5.&lt;/li&gt;
  &lt;li&gt;[PR #4966][arnongilboa] Solve virtctl ‚ÄúError when closing file ‚Ä¶ file already closed‚Äù that shows after successful image upload&lt;/li&gt;
  &lt;li&gt;[PR #4489][salanki] Fix a bug where a disk.img file was created on filesystems mounted via Virtio-FS&lt;/li&gt;
  &lt;li&gt;[PR #4982][xpivarc] Fixing handling of transient domain&lt;/li&gt;
  &lt;li&gt;[PR #4984][ashleyschuett] Change customizeComponents.patches such that ‚Äò*‚Äô resourceName or resourceType matches all, all fields of a patch (type, patch, resourceName, resourceType) are now required.&lt;/li&gt;
  &lt;li&gt;[PR #4972][vladikr] allow disabling pvspinlock to support older guest kernels&lt;/li&gt;
  &lt;li&gt;[PR #4927][yuhaohaoyu] Fix of XML and JSON marshalling/unmarshalling for user defined device alias names which can make migrations fail.&lt;/li&gt;
  &lt;li&gt;[PR #4552][rthallisey] VMs using bridged networking will survive a kubelet restart by having kubevirt create a dummy interface on the virt-launcher pods, so that some Kubernetes CNIs, that have implemented the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHECK&lt;/code&gt; RPC call, will not cause VMI pods to enter a failed state.&lt;/li&gt;
  &lt;li&gt;[PR #4883][iholder-redhat] Bug fixed: Enabling libvirt debug logs only if debugLogs label value is ‚Äútrue‚Äù, disabling otherwise.&lt;/li&gt;
  &lt;li&gt;[PR #4840][alicefr] Generate k8s events on IO errors&lt;/li&gt;
  &lt;li&gt;[PR #4940][vladikr] permittedHostDevices will support both upper and lowercase letters in the device ID&lt;/li&gt;
&lt;/ul&gt;</content><author><name>kubeü§ñ</name></author><category term="releases" /><category term="release notes" /><category term="changelog" /><summary type="html">v0.39.0</summary></entry><entry><title type="html">The KubeVirt Summit 2021 is a wrap!</title><link href="https://kubevirt.io//2021/KubeVirt-Summit-Wrap-Up.html" rel="alternate" type="text/html" title="The KubeVirt Summit 2021 is a wrap!" /><published>2021-03-03T00:00:00+00:00</published><updated>2021-03-03T00:00:00+00:00</updated><id>https://kubevirt.io//2021/KubeVirt-Summit-Wrap-Up</id><content type="html" xml:base="https://kubevirt.io//2021/KubeVirt-Summit-Wrap-Up.html">&lt;p&gt;Just a few weeks ago, the KubeVirt community had their first ever dedicated
online event, the &lt;a href=&quot;/summit/&quot;&gt;KubeVirt Summit&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;We are very happy to have had this opportunity to meet so many community
members, hear from users, vendors and contributors, and learn so many things
about KubeVirt.&lt;/p&gt;

&lt;p&gt;If you missed the event, or if you were there and want to remember the great
time we had, the &lt;a href=&quot;https://youtube.com/playlist?list=PLnLpXX8KHIYyQi7Phsf5-73r5fj1AOBox&quot;&gt;session recordings&lt;/a&gt;
are available in the &lt;a href=&quot;https://www.youtube.com/c/KubeVirt&quot;&gt;KubeVirt YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The landing page about the &lt;a href=&quot;/summit/&quot;&gt;KubeVirt Summit&lt;/a&gt;
contains a detailed list of all the sessions, with information about the
contents, presenters, and direct links to each session recording and slides
(where available).&lt;/p&gt;

&lt;h2 id=&quot;thanks&quot;&gt;Thanks!&lt;/h2&gt;

&lt;p&gt;We would like to thank everyone who contributed to make this event happen: all
the presenters / session leads, everyone who proposed a session, the various
community members who contributed to the organization, all the attendees, and
the &lt;a href=&quot;https://cncf.io/&quot;&gt;Container-native Computing Foundation&lt;/a&gt; who sponsored the
event.&lt;/p&gt;

&lt;h2 id=&quot;i-want-more&quot;&gt;I want more!&lt;/h2&gt;

&lt;p&gt;We are just wrapping up this first edition. Based on this experience, we really
hope to have more community events of this type in the future, but it is still a
bit early to say when/where how.&lt;/p&gt;

&lt;p&gt;For now, please keep the conversations going through the various community channels:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;a href=&quot;https://groups.google.com/forum/#!forum/kubevirt-dev&quot;&gt;mailing list&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://kubernetes.slack.com/archives/C8ED7RKFE&quot;&gt;#virtualization Slack channel&lt;/a&gt; in &lt;a href=&quot;https://slack.k8s.io/&quot;&gt;Kubernetes Slack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Our &lt;a href=&quot;https://calendar.google.com/calendar/embed?src=18pc0jur01k8f2cccvn5j04j1g%40group.calendar.google.com&amp;amp;ctz=Etc%2FGMT&quot;&gt;community meetings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://github.com/kubevirt&quot;&gt;github repositories&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/kubevirt&quot;&gt;@kubevirt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Pep Turr√≥ Mauri</name></author><category term="news" /><category term="kubevirt" /><category term="event" /><category term="community" /><summary type="html">Just a few weeks ago, the KubeVirt community had their first ever dedicated online event, the KubeVirt Summit!</summary></entry><entry><title type="html">KubeVirt v0.38.0</title><link href="https://kubevirt.io//2021/changelog-v0.38.0.html" rel="alternate" type="text/html" title="KubeVirt v0.38.0" /><published>2021-02-08T00:00:00+00:00</published><updated>2021-02-08T00:00:00+00:00</updated><id>https://kubevirt.io//2021/changelog-v0.38.0</id><content type="html" xml:base="https://kubevirt.io//2021/changelog-v0.38.0.html">&lt;h2 id=&quot;v0380&quot;&gt;v0.38.0&lt;/h2&gt;

&lt;p&gt;Released on: Mon Feb 8 13:15:32 2021 +0000&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[PR #4870][qinqon] Bump k8s deps to 0.20.2&lt;/li&gt;
  &lt;li&gt;[PR #4571][yuvalturg] Added os, workflow and flavor labels to the kubevirt_vmi_phase_count metric&lt;/li&gt;
  &lt;li&gt;[PR #4659][salanki] Fixed an issue where non-root users inside a guest could not write to a Virtio-FS mount.&lt;/li&gt;
  &lt;li&gt;[PR #4844][xpivarc] Fixed limits/requests to accept int again&lt;/li&gt;
  &lt;li&gt;[PR #4850][rmohr] virtio-scsi now respects the useTransitionalVirtio flag instead of assigning a virtio version depending on the machine layout&lt;/li&gt;
  &lt;li&gt;[PR #4672][vladikr] allow increasing logging verbosity of infra components in KubeVirt CR&lt;/li&gt;
  &lt;li&gt;[PR #4838][rmohr] Fix an issue where it may not be able to update the KubeVirt CR after creation for up to minutes due to certificate propagation delays&lt;/li&gt;
  &lt;li&gt;[PR #4806][rmohr] Make the mutating webhooks for VMIs and VMs  required to avoid letting entities into the cluster which are not properly defaulted&lt;/li&gt;
  &lt;li&gt;[PR #4779][brybacki] Error messsge on virtctl image-upload to WaitForFirstConsumer DV&lt;/li&gt;
  &lt;li&gt;[PR #4749][davidvossel] KUBEVIRT_CLIENT_GO_SCHEME_REGISTRATION_VERSION env var for specifying exactly what client-go scheme version is registered&lt;/li&gt;
  &lt;li&gt;[PR #4772][jean-edouard] Faster VMI phase transitions thanks to an increased number of VMI watch threads in virt-controller&lt;/li&gt;
  &lt;li&gt;[PR #4730][rmohr] Add spec.domain.devices.useVirtioTransitional boolean to support virtio-transitional for old guests&lt;/li&gt;
&lt;/ul&gt;</content><author><name>kubeü§ñ</name></author><category term="releases" /><category term="release notes" /><category term="changelog" /><summary type="html">v0.38.0</summary></entry><entry><title type="html">KubeVirt v0.37.0</title><link href="https://kubevirt.io//2021/changelog-v0.37.0.html" rel="alternate" type="text/html" title="KubeVirt v0.37.0" /><published>2021-01-18T00:00:00+00:00</published><updated>2021-01-18T00:00:00+00:00</updated><id>https://kubevirt.io//2021/changelog-v0.37.0</id><content type="html" xml:base="https://kubevirt.io//2021/changelog-v0.37.0.html">&lt;h2 id=&quot;v0370&quot;&gt;v0.37.0&lt;/h2&gt;

&lt;p&gt;Released on: Mon Jan 18 17:57:03 2021 +0000&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[PR #4654][AlonaKaplan] Introduce virt-launcher DHCPv6 server.&lt;/li&gt;
  &lt;li&gt;[PR #4669][kwiesmueller] Add nodeSelector to kubevirt components restricting them to run on linux nodes only.&lt;/li&gt;
  &lt;li&gt;[PR #4648][davidvossel] Update libvirt base container to be based of packages in rhel-av 8.3&lt;/li&gt;
  &lt;li&gt;[PR #4653][qinqon] Allow configure cloud-init with networkData only.&lt;/li&gt;
  &lt;li&gt;[PR #4644][ashleyschuett] Operator validation webhook will deny updates to the workloads object of the KubeVirt CR if there are running VMIs&lt;/li&gt;
  &lt;li&gt;[PR #3349][davidvossel] KubeVirt v1 GA api&lt;/li&gt;
  &lt;li&gt;[PR #4645][maiqueb] Re-introduce the CAP_NET_ADMIN, to allow migration of VMs already having it.&lt;/li&gt;
  &lt;li&gt;[PR #4546][yuhaohaoyu] Failure detection and handling for VM with EFI Insecure Boot in KubeVirt environments where EFI Insecure Boot is not supported by design.&lt;/li&gt;
  &lt;li&gt;[PR #4625][awels] virtctl upload now shows error when specifying access mode of ReadOnlyMany&lt;/li&gt;
  &lt;li&gt;[PR #4396][xpivarc] KubeVirt is now explainable!&lt;/li&gt;
  &lt;li&gt;[PR #4517][danielBelenky] Fix guest agent reporting.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>kubeü§ñ</name></author><category term="releases" /><category term="release notes" /><category term="changelog" /><summary type="html">v0.37.0</summary></entry><entry><title type="html">KubeVirt Summit is coming!</title><link href="https://kubevirt.io//2021/KubeVirt-Summit-announce.html" rel="alternate" type="text/html" title="KubeVirt Summit is coming!" /><published>2021-01-12T00:00:00+00:00</published><updated>2021-01-12T00:00:00+00:00</updated><id>https://kubevirt.io//2021/KubeVirt-Summit-announce</id><content type="html" xml:base="https://kubevirt.io//2021/KubeVirt-Summit-announce.html">&lt;p&gt;Exciting news! The KubeVirt community are in the process of planning the first ever &lt;strong&gt;KubeVirt Summit&lt;/strong&gt;!&lt;/p&gt;

&lt;h2 id=&quot;save-the-dates&quot;&gt;Save the dates!&lt;/h2&gt;

&lt;p&gt;The event will take place online during two half-days:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dates: February 9 and 10, 2021.&lt;/li&gt;
  &lt;li&gt;Time: 15:00 ‚Äì 19:00 UTC (10:00‚Äì14:00 EST, 16:00‚Äì20:00 CET)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;proposing-topics&quot;&gt;Proposing topics&lt;/h2&gt;

&lt;p&gt;We want to encourage anyone who is interested in presenting to submit a topic to
our community repo
&lt;a href=&quot;https://github.com/kubevirt/community/tree/master/events/2021-kubevirt-summit/proposals&quot;&gt;here&lt;/a&gt;. Simply
copy the
&lt;a href=&quot;https://github.com/kubevirt/community/blob/master/events/2021-kubevirt-summit/proposals/proposal-template.md&quot;&gt;template&lt;/a&gt; in that repo directory as a new file, fill in the details pertaining to your
session, and submit your proposal as a Pull Request.&lt;/p&gt;

&lt;h2 id=&quot;keep-up-to-date&quot;&gt;Keep up to date&lt;/h2&gt;

&lt;p&gt;The event has a landing page &lt;a href=&quot;/summit/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;More details will be shared as they become available, here in the website and also on our &lt;a href=&quot;https://groups.google.com/forum/#!forum/kubevirt-dev&quot;&gt;mailing list&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/kubevirt&quot;&gt;twitter&lt;/a&gt; and our &lt;a href=&quot;https://calendar.google.com/calendar/embed?src=18pc0jur01k8f2cccvn5j04j1g%40group.calendar.google.com&amp;amp;ctz=Etc%2FGMT&quot;&gt;weekly community meetings&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Reach out through any of these channels to get involved.&lt;/p&gt;

&lt;p&gt;Looking forward to meeting you there!&lt;/p&gt;</content><author><name>Pep Turr√≥ Mauri</name></author><category term="news" /><category term="kubevirt" /><category term="event" /><category term="community" /><summary type="html">Exciting news! The KubeVirt community are in the process of planning the first ever KubeVirt Summit!</summary></entry></feed>